# session/login.py

import time
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

from notifier.telegram_bot import notify


def login(driver, config):
    wait = WebDriverWait(driver, 30)

    # 1. –û—Ç–∫—Ä—ã—Ç—å –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    driver.get("https://vp.regitra.lt/#/")

    # 2. –ö–ª–∏–∫ –ø–æ –∏–∫–æ–Ω–∫–µ –≤—Ö–æ–¥–∞
    wait.until(EC.element_to_be_clickable((By.CLASS_NAME, "icon-cntr"))).click()

    # 3. –ñ–¥–∞—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –Ω–∞ epaslaugos.lt
    wait.until(EC.url_contains("epaslaugos.lt/portal/login"))

    # 4. –ö–ª–∏–∫ –ø–æ –∏–∫–æ–Ω–∫–µ Swedbank
    banks = wait.until(EC.presence_of_all_elements_located((By.CLASS_NAME, "login-bank")))
    swedbank = next((b for b in banks if "Swedbank" in b.get_attribute("innerHTML")), banks[0])
    swedbank.click()

    # 5. –ñ–¥–∞—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –Ω–∞ swedbank.lt
    wait.until(EC.url_contains("swedbank.lt"))

    # 6. –í–≤–µ—Å—Ç–∏ Naudotojo ID –∏ Asmens kodas
    user_id_input = wait.until(EC.element_to_be_clickable((By.NAME, "userId")))
    user_id_input.clear()
    user_id_input.send_keys(config["swedbank_id"])

    asmens_input = wait.until(EC.element_to_be_clickable((By.NAME, "identityNumber")))
    asmens_input.clear()
    asmens_input.send_keys(config["asmens_kodas"])

    # 7. –ù–∞–∂–∞—Ç—å Prisijungti
    driver.find_element(By.XPATH, "//button[contains(text(), 'Prisijungti')]").click()

    # 8. –ñ–¥–∞—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
    code_container = wait.until(EC.presence_of_element_located((By.XPATH, "//*[contains(text(), 'kontrolinis kodas')]/..")))
    # –ñ–¥—ë–º, –ø–æ–∫–∞ –≤ —ç–ª–µ–º–µ–Ω—Ç–µ –ø–æ—è–≤–∏—Ç—Å—è –Ω–µ–ø—É—Å—Ç–æ–π —Ç–µ–∫—Å—Ç
    code_elem = wait.until(EC.presence_of_element_located((By.ID, "ui-signing-code-sid")))
    wait.until(lambda d: code_elem.text.strip() != "")
    code_text = code_elem.text.strip()
    print(f"[login] –ñ–¥—ë–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±–∞–Ω–∫–∞. –ö–æ–¥: {code_text}")
    notify("üîê –í—Ö–æ–¥ –≤ –±–∞–Ω–∫", f"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤—Ö–æ–¥ –≤ Swedbank.\n–ö–æ–¥: <b>{code_text}</b>")


    # 9. –ñ–¥–∞—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –Ω–∞ banklink/auth (—É–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 5 –º–∏–Ω—É—Ç)
    WebDriverWait(driver, 300).until(EC.url_contains("banklink/auth"))

    # 10. –ù–∞–π—Ç–∏ –∏ –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    wait.until(EC.element_to_be_clickable((By.XPATH, "//input[@type='button' and contains(@onclick, 'linkAction')]"))).click()

    # 11. –ñ–¥–∞—Ç—å –ø–æ–ø–∞–¥–∞–Ω–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É—Å–ª—É–≥
    wait.until(EC.url_contains("/#/paslaugos"))

    print("[login] –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥")
    notify("‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω", "–£—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É Regitra.")



# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
# from selenium import webdriver
# from session.login import login
# config = {"swedbank_id": "27673141", "asmens_kodas": "12345678901"}
# driver = webdriver.Chrome()
# login(driver, config)
